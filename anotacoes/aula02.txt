npm i
npm i swagger-ui-express swagger-jsdoc
npm i -D @types/swagger-ui-express @types/swagger-jsdoc

(em src crie um arquivo chamado config/swagger.ts)
(no arquivo 'swagger.ts' escreva ->

import { title } from "process";
import swaggerJSDoc from "swagger-jsdoc";

const options = {
    definition: {
        openapi: '3.0.0',
        info: {
            title: 'API de Alunos',
            version: '1.0.0',
            description: 'API para gerencioamento de alunos'
        },
        servers: [
            {
                url: 'http://localhost:3000',
                description: 'Servidor de desenvolvimento'
            }
        ] 
    },
    apis: ['./src/routes/*.ts', './src/controllers/*.ts']
}

export const swaggerSpec = swaggerJSDoc(options);

<-)

(altere o arquivo 'server.ts' ->

import express from "express";
import swaggerUi from "swagger-ui-express";

import { swaggerSpec } from "./config/swagger";
import alunoRouter from "./routes/alunoRoute";

const app = express();
app.use(express.json());

app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerSpec));

app.use("/aluno", alunoRouter);

app.listen(3000, () => {
    console.log("API Server Rodando");
});

<-)

(altere o arquivo 'alunoRoute.ts' ->

import {Router} from "express";
import {AlunoController} from "../controllers/alunoController";

const alunoRouter = Router();
const aluno = new AlunoController();

/**
 * @swagger
 * components:
 *  schemas:
 *      Aluno:
 *          type: object
 *          required:
 *              - nome
 *              - ra
 *          properties: 
 *              nome:
 *                  type: string
 *                  description: Nome do Aluno
 *              ra: 
 *                  type: string
 *                  description: Registro unico de Aluno              
 */

/**
 * @swagger
 * /aluno:
 *  get:
 *      summary: Lista todos os alunos
 *      tags: [Aluno]
 *      responses: 
 *          200:
 *              description: Lista de alunos
 *              content: 
 *                  application/json:
 *                      schema: 
 *                          type: array
 *                          items: 
 *                              $ref: '#/components/schemas/Aluno'
 */

alunoRouter.get("/", (req, res) => aluno.get(req, res));


/**
 * @swagger
 * /aluno:
 *  post:
 *      summary: Cadastrar um aluno
 *      tags: [Aluno]
 *      requestBody: 
 *          content: 
 *              application/json:
 *                  schema:
 *                      $ref: '#/components/schemas/Aluno'
 *      responses: 
 *          201:
 *              description: Aluno criado
 *              content: 
 *                  application/json:
 *                      schema: 
 *                          $ref: '#/components/schemas/Aluno'
 */
alunoRouter.post("/", (req, res) => aluno.post(req, res));



alunoRouter.put("/:ra", (req, res) => aluno.put(req, res));

export default alunoRouter;

<-)